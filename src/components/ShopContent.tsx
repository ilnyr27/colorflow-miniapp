import React, { useState } from 'react';
import { motion } from 'framer-motion';
import { useGameStore } from '@/store/gameStore';
import { useTelegram } from '@/hooks/useTelegram';
import { GAME_CONFIG, RARITY_COLORS } from '@/config/game';
import { ColorRarity } from '@/types/game';
import { Star, Sparkles } from 'lucide-react';

export const ShopContent: React.FC = () => {
  const { getAvailableForPurchase, purchaseColor } = useGameStore();
  const { hapticFeedback, showAlert } = useTelegram();
  const [purchasing, setPurchasing] = useState<ColorRarity | null>(null);

  const availableRarities = getAvailableForPurchase();

  const handlePurchase = async (rarity: ColorRarity) => {
    if (purchasing) return;
    
    setPurchasing(rarity);
    hapticFeedback.medium();
    
    try {
      const price = GAME_CONFIG.STAR_PRICES[rarity];
      
      // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Telegram Stars
      // –ü–æ–∫–∞ —á—Ç–æ —Å–∏–º—É–ª–∏—Ä—É–µ–º –ø–æ–∫—É–ø–∫—É
      const success = await simulateTelegramStarsPurchase(rarity, price);
      
      if (success) {
        await purchaseColor(rarity, 'stars');
        showAlert(`–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –ø–æ–ª—É—á–∏–ª–∏ –Ω–æ–≤—ã–π ${rarity} —Ü–≤–µ—Ç!`);
        hapticFeedback.success();
      } else {
        showAlert('–ü–æ–∫—É–ø–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞ –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞');
        hapticFeedback.error();
      }
    } catch (error) {
      console.error('Purchase error:', error);
      showAlert('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ');
      hapticFeedback.error();
    } finally {
      setPurchasing(null);
    }
  };

  const simulateTelegramStarsPurchase = async (rarity: ColorRarity, price: number): Promise<boolean> => {
    // –°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ –ø–æ–∫—É–ø–∫–∏
    return new Promise((resolve) => {
      setTimeout(() => {
        // –í 80% —Å–ª—É—á–∞–µ–≤ –ø–æ–∫—É–ø–∫–∞ —É—Å–ø–µ—à–Ω–∞ (–¥–ª—è –¥–µ–º–æ)
        resolve(Math.random() > 0.2);
      }, 2000);
    });
  };

  const getRarityDisplayName = (rarity: ColorRarity): string => {
    const names = {
      common: '–û–±—ã—á–Ω—ã–π',
      uncommon: '–ù–µ–æ–±—ã—á–Ω—ã–π', 
      rare: '–†–µ–¥–∫–∏–π',
      mythical: '–ú–∏—Ñ–∏—á–µ—Å–∫–∏–π',
      legendary: '–õ–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π',
      ascendant: '–í–æ–∑–≤—ã—à–µ–Ω–Ω—ã–π',
      unique: '–£–Ω–∏–∫–∞–ª—å–Ω—ã–π',
      ulterior: '–°–∫—Ä—ã—Ç—ã–π',
      ultimate: '–ê–±—Å–æ–ª—é—Ç–Ω—ã–π'
    };
    return names[rarity] || rarity;
  };

  const getRarityDescription = (rarity: ColorRarity): string => {
    const descriptions = {
      common: '–ë–ª–µ–¥–Ω—ã–µ, —Ç—É—Å–∫–ª—ã–µ –æ—Ç—Ç–µ–Ω–∫–∏ –¥–ª—è –Ω–∞—á–∏–Ω–∞—é—â–∏—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä–æ–≤',
      uncommon: '–°–ª–µ–≥–∫–∞ –±–æ–ª–µ–µ –Ω–∞—Å—ã—â–µ–Ω–Ω—ã–µ —Ü–≤–µ—Ç–∞ —Å –ø—Ä–∏—è—Ç–Ω—ã–º–∏ —Ç–æ–Ω–∞–º–∏',
      rare: '–ú—è–≥–∫–∏–µ, –∑–∞–º–µ—Ç–Ω—ã–µ –æ—Ç—Ç–µ–Ω–∫–∏ —Å –≥–ª—É–±–∏–Ω–æ–π –∏ —Ö–∞—Ä–∞–∫—Ç–µ—Ä–æ–º',
      mythical: '–ü–∞—Å—Ç–µ–ª—å–Ω—ã–µ, –Ω–æ —è—Ä–∫–∏–µ —Ü–≤–µ—Ç–∞ —Å –º–∞–≥–∏—á–µ—Å–∫–∏–º –æ—á–∞—Ä–æ–≤–∞–Ω–∏–µ–º',
      legendary: '–ù–∞—Å—ã—â–µ–Ω–Ω—ã–µ –∏ —è—Ä–∫–∏–µ —Ü–≤–µ—Ç–∞, –¥–æ—Å—Ç–æ–π–Ω—ã–µ –ª–µ–≥–µ–Ω–¥',
      ascendant: '254 –æ—Ç—Ç–µ–Ω–∫–∞ —Å–µ—Ä–æ–≥–æ - –ø—É—Ç—å –∫ —Å–æ–≤–µ—Ä—à–µ–Ω—Å—Ç–≤—É',
      unique: '–ß–∏—Å—Ç—ã–µ —Ü–≤–µ—Ç–∞: –∫—Ä–∞—Å–Ω—ã–π, –∑–µ–ª–µ–Ω—ã–π, —Å–∏–Ω–∏–π, –∂–µ–ª—Ç—ã–π, –≥–æ–ª—É–±–æ–π, —Ñ—É–∫—Å–∏–Ω',
      ulterior: '–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ - —Ç–æ–ª—å–∫–æ —á–µ—Ä–µ–∑ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏',
      ultimate: '–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ –¥–ª—è –ø–æ–∫—É–ø–∫–∏ - —Ñ–∏–Ω–∞–ª—å–Ω–∞—è —Ü–µ–ª—å –∏–≥—Ä—ã'
    };
    return descriptions[rarity] || '';
  };

  const containerVariants = {
    hidden: { opacity: 0 },
    visible: {
      opacity: 1,
      transition: {
        staggerChildren: 0.1
      }
    }
  };

  const itemVariants = {
    hidden: { y: 20, opacity: 0 },
    visible: {
      y: 0,
      opacity: 1,
      transition: { duration: 0.5 }
    }
  };

  return (
    <div className="shop-content-wrapper">
      {availableRarities.length === 0 ? (
        <motion.div 
          className="shop-empty"
          initial={{ opacity: 0, y: 20 }}
          animate={{ opacity: 1, y: 0 }}
          transition={{ duration: 0.5 }}
        >
          <Sparkles size={48} className="empty-icon" />
          <h3>–ú–∞–≥–∞–∑–∏–Ω –ø–æ–∫–∞ –∑–∞–∫—Ä—ã—Ç</h3>
          <p>–ò–≥—Ä–∞–π—Ç–µ –±–æ–ª—å—à–µ, —á—Ç–æ–±—ã —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –Ω–æ–≤—ã–µ —Ä–µ–¥–∫–æ—Å—Ç–∏ –¥–ª—è –ø–æ–∫—É–ø–∫–∏!</p>
          <div className="unlock-hint">
            <p>–ü–µ—Ä–≤—ã–µ –ø–æ–∫—É–ø–∫–∏ —Å—Ç–∞–Ω—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã —á–µ—Ä–µ–∑:</p>
            <ul>
              <li>22 –¥–Ω—è - –ù–µ–æ–±—ã—á–Ω—ã–µ —Ü–≤–µ—Ç–∞</li>
              <li>50 –¥–Ω–µ–π - –†–µ–¥–∫–∏–µ —Ü–≤–µ—Ç–∞</li>
              <li>105 –¥–Ω–µ–π - –ú–∏—Ñ–∏—á–µ—Å–∫–∏–µ —Ü–≤–µ—Ç–∞</li>
            </ul>
          </div>
        </motion.div>
      ) : (
        <motion.div 
          className="shop-items-grid"
          variants={containerVariants}
          initial="hidden"
          animate="visible"
        >
          {availableRarities.map((rarity) => {
            const price = GAME_CONFIG.STAR_PRICES[rarity];
            const isPurchasing = purchasing === rarity;
            
            return (
              <motion.div
                key={rarity}
                className="shop-item-card"
                style={{ borderColor: RARITY_COLORS[rarity] }}
                variants={itemVariants}
                whileHover={{ scale: 1.02 }}
                whileTap={{ scale: 0.98 }}
              >
                <div className="item-header">
                  <div 
                    className="rarity-badge"
                    style={{ backgroundColor: RARITY_COLORS[rarity] }}
                  >
                    {getRarityDisplayName(rarity)}
                  </div>
                  <div className="item-price">
                    <Star size={16} fill="currentColor" />
                    {price}
                  </div>
                </div>
                
                <div className="item-description">
                  <p>{getRarityDescription(rarity)}</p>
                </div>

                <div className="item-stats">
                  <div className="stat">
                    <span className="stat-label">–í—Å–µ–≥–æ –≤ –∏–≥—Ä–µ:</span>
                    <span className="stat-value">
                      {GAME_CONFIG.TOTAL_COLOR_COUNTS[rarity].toLocaleString()}
                    </span>
                  </div>
                  <div className="stat">
                    <span className="stat-label">–í—Ä–µ–º—è —Å—Ç–µ–π–∫–∏–Ω–≥–∞:</span>
                    <span className="stat-value">
                      {GAME_CONFIG.STAKING_TIMES[rarity]} –º–∏–Ω
                    </span>
                  </div>
                </div>

                <motion.button
                  className="purchase-btn"
                  onClick={() => handlePurchase(rarity)}
                  disabled={isPurchasing}
                  style={{ 
                    backgroundColor: isPurchasing ? '#ccc' : RARITY_COLORS[rarity] 
                  }}
                  whileHover={!isPurchasing ? { scale: 1.05 } : {}}
                  whileTap={!isPurchasing ? { scale: 0.95 } : {}}
                >
                  {isPurchasing ? (
                    <div className="purchase-loading">
                      <div className="spinner" />
                      –ü–æ–∫—É–ø–∫–∞...
                    </div>
                  ) : (
                    <>
                      <Star size={16} fill="currentColor" />
                      –ö—É–ø–∏—Ç—å –∑–∞ {price} Stars
                    </>
                  )}
                </motion.button>
              </motion.div>
            );
          })}
        </motion.div>
      )}

      <motion.div 
        className="payment-info"
        initial={{ opacity: 0, y: 20 }}
        animate={{ opacity: 1, y: 0 }}
        transition={{ delay: 0.3, duration: 0.5 }}
      >
        <div className="info-card">
          <p>üí≥ –û–ø–ª–∞—Ç–∞ —á–µ—Ä–µ–∑ Telegram Stars</p>
          <p>üîí –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∏ —á–µ—Ä–µ–∑ Telegram</p>
          <p>‚ö° –ú–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤</p>
        </div>
      </motion.div>
    </div>
  );
};
